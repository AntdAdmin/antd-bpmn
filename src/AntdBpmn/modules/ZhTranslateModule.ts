var zhConfigs = {


    // Labels
    'Activate the global connect tool': '启动全局连接工具',
    'Append {type}': '追加 {type}',
    'Add Lane above': '添加到通道之上',
    'Divide into two Lanes': '分成两条通道',
    'Divide into three Lanes': '分成三条通道',
    'Add Lane below': '添加到通道之下',
    'Append compensation activity': '追加补偿活动',
    'Append EndEvent': '追加结束事件',
    'Append Gateway': '追加网关',
    'Append Task': '追加Task',
    'Append Intermediate/Boundary Event': '追加中间/边界事件',
    'TextAnnotation': '文本注释',
    'Change type': '更改类型',
    'Connect using Association': '文本关联',
    'Connect using Sequence/MessageFlow or Association': '消息关联',
    'Connect using DataInputAssociation': '数据关联',
    'Remove': '移除',
    'Activate the hand tool': '激活抓手工具',
    'Activate the lasso tool': '激活套索工具',
    'Activate the create/remove space tool': '激活创建/删除空间工具',
    'Create StartEvent': '创建开始事件',
    'Create EndEvent': '创建结束事件',
    'Create expanded SubProcess': '创建可折叠子流程',
    'Create IntermediateThrowEvent/BoundaryEvent': '创建中间抛出/边界事件',
    'Create Pool/Participant': '创建池/参与者',
    'Create Task': '创建Task',
    'Create DataObjectReference': '创建数据对象引用',
    'Parallel Multi Instance': '并行多实例',
    'Sequential Multi Instance': '串行多实例',
    'DataObjectReference': '数据对象参考',
    'DataStoreReference': '数据存储参考',
    'Loop': '循环',
    'Ad-hoc': 'Ad-hoc子流程',
    'Create {type}': '创建 {type}',
    'Task': '任务',
    'Send Task': '发送任务',
    'Receive Task': '接收任务',
    'User Task': '用户任务',
    'Manual Task': '手动任务',
    'Business Rule Task': '业务规则任务',
    'Service Task': '服务任务',
    'Script Task': '脚本任务',
    'Call Activity': '引用流程',
    'Sub Process (collapsed)': '可折叠子流程',
    'Sub Process (expanded)': '可展开子流程',
    'Start Event': '开始事件',
    'StartEvent': '开始事件',
    'Intermediate Throw Event': '中间抛出事件',
    'End Event': '结束事件',
    'EndEvent': '结束事件',
    'Create Gateway': '创建网关',
    'Create Intermediate/Boundary Event': '创建中间/边界事件',
    'Message Start Event': '消息启动事件',
    'Timer Start Event': '定时启动事件',
    'Conditional Start Event': '条件启动事件',
    'Signal Start Event': '信号启动事件',
    'Error Start Event': '错误启动事件',
    'Escalation Start Event': '升级启动事件',
    'Compensation Start Event': '补偿启动事件',
    'Message Start Event (non-interrupting)': '消息启动事件（非中断）',
    'Timer Start Event (non-interrupting)': '定时启动事件（非中断）',
    'Conditional Start Event (non-interrupting)': '条件启动事件（非中断）',
    'Signal Start Event (non-interrupting)': '信号启动事件（非中断）',
    'Escalation Start Event (non-interrupting)': '升级启动事件（非中断）',
    'Message Intermediate Catch Event': '中间消息捕获事件',
    'Message Intermediate Throw Event': '中间消息抛出事件',
    'Timer Intermediate Catch Event': '中间定时捕获事件',
    'Escalation Intermediate Throw Event': '中间升级抛出事件',
    'Conditional Intermediate Catch Event': '中间条件捕获事件',
    'Link Intermediate Catch Event': '中间链接捕获事件',
    'Link Intermediate Throw Event': '中间链接抛出事件',
    'Compensation Intermediate Throw Event': '中间补偿抛出事件',
    'Signal Intermediate Catch Event': '中间信号捕获事件',
    'Signal Intermediate Throw Event': '中间信号抛出事件',
    'Message End Event': '结束消息事件',
    'Escalation End Event': '结束升级事件',
    'Error End Event': '结束错误事件',
    'Cancel End Event': '结束取消事件',
    'Compensation End Event': '结束补偿事件',
    'Signal End Event': '结束信号事件',
    'Terminate End Event': '终止边界事件',
    'Message Boundary Event': '消息边界事件',
    'Message Boundary Event (non-interrupting)': '消息边界事件（非中断）',
    'Timer Boundary Event': '定时边界事件',
    'Timer Boundary Event (non-interrupting)': '定时边界事件（非中断）',
    'Escalation Boundary Event': '升级边界事件',
    'Escalation Boundary Event (non-interrupting)': '升级边界事件（非中断）',
    'Conditional Boundary Event': '条件边界事件',
    'Conditional Boundary Event (non-interrupting)': '条件边界事件（非中断）',
    'Error Boundary Event': '错误边界事件',
    'Cancel Boundary Event': '取消边界事件',
    'Signal Boundary Event': '信号边界事件',
    'Signal Boundary Event (non-interrupting)': '信号边界事件（非中断）',
    'Compensation Boundary Event': '补偿边界事件',
    'Exclusive Gateway': '独占网关',
    'Parallel Gateway': '并行网关',
    'Inclusive Gateway': '包容网关',
    'Complex Gateway': '复杂网关',
    'Event based Gateway': '事件网关',
    'Transaction': '事务',
    'Sub Process': '子流程',
    'Event Sub Process': '事件子流程',
    'Collapsed Pool': '折叠池',
    'Expanded Pool': '展开池',

    // Errors
    'no parent for {element} in {parent}': '在 {element} 中没有父元素 {parent}',
    'no shape type specified': '未指定形状类型',
    'flow elements must be children of pools/participants': '流元素必须是池/参与者的子级',
    'out of bounds release': '越界释放',
    'more than {count} child lanes': '超过 {count} 条通道 ',
    'element required': '需要元素',
    'diagram not part of bpmn:Definitions': '流程图不符合bpmn规范',
    'no diagram to display': '没有要显示的图表',
    'no process or collaboration to display': '没有可显示的流程或协作',
    'element {element} referenced by {referenced}#{property} not yet drawn': '元素 {element} 的引用 {referenced}#{property} 尚未绘制',
    'already rendered {element}': '{element} 已呈现',
    'failed to import {element}': '{element} 导入失败',

    //属性面板的参数
    'Id': 'id',
    'Name': 'name',
    'General': '常规',
    'Details': '详情',
    'Message Name': '消息名称',
    'Message': '消息',
    'Initiator': '创建者',
    'Asynchronous Continuations': '持续异步',
    'Asynchronous Before': '异步前',
    'Asynchronous After': '异步后',
    'Job Configuration': '工作配置',
    'Exclusive': '排除',
    'Job Priority': '工作优先级',
    'Retry Time Cycle': '重试时间周期',
    'Documentation': '文档',
    'Element Documentation': '元素文档',
    'History Configuration': '历史配置',
    'History Time To Live': '历史的生存时间',
    'Forms': '表单',
    'Form Key': '表单key',
    'Form Fields': '表单字段集',
    'Business Key': '业务key',
    'Form Field': '表单字段',
    'ID': 'ID',
    'Type': 'Type',
    'Label': 'Label',
    'Default Value': '默认值',
    'Validation': '校验',
    'Add Constraint': '添加约束',
    'Config': '配置',
    'Properties': '属性',
    'Add Property': '添加属性',
    'Value': 'Value',
    'Listeners': '监听器',
    'Execution Listener': '执行监听',
    'Event Type': '事件类型',
    'Listener Type': '监听器类型',
    'Java Class': 'Java类',
    'Expression': '表达式',
    'Must provide a value': '必须提供一个值',
    'Delegate Expression': '代理表达式',
    'Script': '脚本',
    'Script Format': '脚本格式',
    'Script Type': '脚本类型',
    'Inline Script': '内联脚本',
    'External Script': '外部脚本',
    'Resource': '资源',
    'Field Injection': '字段注入',
    'Extensions': '扩展',
    'Input/Output': '输入/输出',
    'Input Parameters': '输入参数',
    'Output Parameters': '输出参数',
    'Parameters': '参数',
    'Output Parameter': '输出参数',
    'Timer Definition Type': '定时器定义类型',
    'Timer Definition': '定时器定义',
    'Date': '日期',
    'Duration': '持续',
    'Cycle': '循环',
    'Signal': '信号',
    'Signal Name': '信号名称',
    'Escalation': '升级',
    'Error': '错误',
    'Link Name': '链接名称',
    'Condition': '条件名称',
    'Variable Name': '变量名称',
    'Variable Event': '变量事件',
    'Specify more than one variable change event as a comma separated list.': '多个变量事件以逗号隔开',
    'Wait for Completion': '等待完成',
    'Activity Ref': '活动参考',
    'Version Tag': '版本标签',
    'Executable': '可被执行',
    'External Task Configuration': '外部任务配置',
    'Task Priority': '任务优先级',
    'External': '外部',
    'Connector': '连接器',
    'Must configure Connector': '必须配置连接器',
    'Connector Id': '连接器Id',
    'Implementation': '实现方式',
    'Field Injections': '字段注入',
    'Fields': '字段',
    'Result Variable': '结果变量',
    'Topic': '主题',
    'Configure Connector': '配置连接器',
    'Input Parameter': '输入参数',
    'Assignee': '代理人',
    'Candidate Users': '候选用户',
    'Candidate Groups': '候选组',
    'Due Date': '到期时间',
    'Follow Up Date': '跟踪日期',
    'Priority': '优先级',
    'The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)': '跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00',
    'The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)': '跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00',
    'Variables': '变量',
    'Specify more than one user as a comma separated list.': '指定多个用户作为逗号分隔列表',
    'Create Group': '创建组',
    'Create DataStoreReference': '创建数据存储引用',
    'Create UserTask': '创建用户任务',
    'Append UserTask': '追加用户任务',
    'Append TextAnnotation': '追加文本批注',
    'Default Flow': '默认顺序流',
    'Sequence Flow': '顺序流',
    'Conditional Flow': '条件顺序流',
    'Change element': '切换节点',
    'Open minimap': '打开小地图',
    'Close minimap': '关闭小地图',

} as any;


function customTranslate(template:string, replacements:any) {
    replacements = replacements || {};

    // Translate
    template = zhConfigs[template] || template;

    // Replace
    return template.replace(/{([^}]+)}/g, function(_, key) {
        return replacements[key] || '{' + key + '}';
    });
}

export const zhTranslateModule = {
    translate: [ 'value', customTranslate ]
};
